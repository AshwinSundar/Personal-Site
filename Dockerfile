# Use the Nginx Alpine image as a build stage (temporary image)
FROM nginx:alpine as build
# Install wget in the Alpine-based image
RUN apk add --update \
    wget

# Define the Hugo version
ARG HUGO_VERSION="0.117.0"

# Download and install Hugo
RUN wget --quiet "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.tar.gz" && \
    tar xzf hugo_${HUGO_VERSION}_Linux-64bit.tar.gz && \
    rm -r hugo_${HUGO_VERSION}_Linux-64bit.tar.gz && \
    mv hugo /usr/bin && \
    chmod 755 /usr/bin/hugo

# Set the working directory
WORKDIR /src
# Copy code
COPY ./ /src

# Install tailwindcss
RUN curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/download/v3.4.3/tailwindcss-linux-x64
RUN chmod +x tailwindcss-linux-x64
RUN mv tailwindcss-linux-x64 /usr/local/bin/tailwindcss

# Generate public assets
RUN chmod +X themes/ashwin/tw-prod.sh
WORKDIR themes/ashwin
RUN sh tw-prod.sh

# Build the Hugo site
WORKDIR /src
RUN hugo --environment production

# Create a new stage with the Nginx Alpine image
FROM nginx:alpine

# Copy the static website files generated by Hugo from the build stage to the Nginx container
COPY --from=build /src/public /usr/share/nginx/html