{
    "componentChunkName": "component---src-pages-blog-mdx-slug-tsx",
    "path": "/blog/car-temperature/car-temperature/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Car Temperatures in Phoenix","date":"March 2017","hero_image_alt":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Car Temperatures in Phoenix\",\n  \"date\": \"2017-03-01\",\n  \"hero_image\": \"\",\n  \"hero_image_alt\": \"\",\n  \"publish\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Using a wireless microcontroller, I monitored the temperature on my car's dashboard and in the passenger footwell for a whole day during a particular hot spell in June in Phoenix. Even though I'm a Phoenix native, I was surprised by just how hot the inside of my car gets. The hardware components used were:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.particle.io/photon/\"\n  }, \"Particle Photon\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2 \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.digikey.com/en/products/detail/amphenol-advanced-sensors/MA100BF103A/272974\"\n  }, \"Amphenol MA100BF103A\"), \" NTC thermistors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3 C batteries (the heat really saps the batteries)\")), mdx(\"p\", null, \"The programs I used for recording and processing data were:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Particle command line interface\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MATLAB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Excel\")), mdx(\"img\", {\n    src: \"https://i.imgur.com/Rh4JUrN.jpeg\",\n    width: \"100%\"\n  }), mdx(\"img\", {\n    src: \"https://i.imgur.com/MLOYlpf.jpeg\",\n    width: \"50%;\"\n  }), mdx(\"p\", null, \"The sun rose at 5:18AM, when the outside temperature was 80.6F.\"), mdx(\"img\", {\n    src: \"https://i.imgur.com/pvBhuP8.jpeg\",\n    width: \"37%\"\n  }), mdx(\"p\", null, \"My car was parked in full shade of the neighbor's house to the east until 9:14AM. At that time, the dashboard temperature rapidly spikes, climbing at a rate of about 1F per minute. At 12:47PM, the dashboard reaches its peak of 212F - the boiling point of water! Meanwhile, the ambient (footwell) temperature is a tolerable 126.1F, and the outside temperature is 107.6F \", \"[joke about dry heat]\", \".\"), mdx(\"img\", {\n    src: \"https://i.imgur.com/IswymtP.jpeg\",\n    width: \"50%\"\n  }), mdx(\"p\", null, \"Around 1:45PM, the car moves into some tree shade, and the dashboard quickly cools off again. Meanwhile, the ambient temperature in the car continues to climb, peaking at 2:43PM at 134.8F. The outside temperature is 111.2F. From here, temperatures cool somewhat for the rest of the day.\"), mdx(\"p\", null, \"The C++ code used to control the Particle Photon is as follows:\"), mdx(\"hr\", null), mdx(\"deckgo-highlight-code\", {\n    \"terminal\": \"none\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"#include <math.h>\\n#include <Particle.h>\\n\\ndouble thermistor1Analog; // contains raw analog data from thermistor 1 circuit VOut\\ndouble thermistor2Analog;\\ndouble thermistor1Resistance; // converts analog reading to resistance\\ndouble thermistor2Resistance;\\ndouble temperature1; // converts thermistor resistance to temperature, according to Amphenol datasheet\\ndouble temperature2;\\nString temperatures = \\\"\\\"; // store temperatures in a buffer, send the whole thing once buffer fills to conserve power\\nTimer tempTimer(60000, checkTemp); // Checks temperature once every minute\\n\\nvoid setup()\\n{\\n    tempTimer.start(); // starts the timer\\n}\\n\\nvoid loop()\\n{\\n\\n}\\n\\n\\nvoid checkTemp()\\n{\\n    thermistor1Analog = analogRead(A5); // short thermistor\\n    thermistor2Analog = analogRead(A4); // long thermistor\\n\\n    // convert resistance to ohms using voltage divider equation, where R1 = 10k ohms\\n    // shielded equation from dividing by zero by putting it in an if statement\\n    if (thermistor1Analog < 4095)\\n    {\\n        thermistor1Resistance = (9820*thermistor1Analog/4095)/(1-thermistor1Analog/4095); // 9820 is multimeter measurement of resistor\\n    }\\n\\n    else if (thermistor1Analog >= 4095) // if the analog reads 4095, then there is a short or the thermistor has failed.\\n    {\\n        thermistor1Resistance = 0;\\n    }\\n\\n    if (thermistor2Analog < 4095)\\n    {\\n        thermistor2Resistance = (9910*thermistor2Analog/4095)/(1-thermistor2Analog/4095); // 9910 is multimeter measurement of resistor\\n    }\\n\\n    else if (thermistor2Analog >= 4095) // if the analog reads 4095, then there is a short or the thermistor has failed.\\n    {\\n        thermistor2Resistance = 0;\\n    }\\n\\n    // calculated temperature by plotting a line of best fit using linear algebra and MATLAB. Error was found to be 3.7998*10^-4 Kelvins using Igor Pro. Compressed some of the math operations to reduce floating point error.\\n    temperature1 = pow((.0011106 + 0.00023724*log(thermistor1Resistance) + 0.000000074738*pow(log(thermistor1Resistance), 3)), -1) - 273.15;\\n    temperature2 = pow((.0011106 + 0.00023724*log(thermistor2Resistance) + 0.000000074738*pow(log(thermistor2Resistance), 3)), -1) - 273.15;\\n    // rounds the temperature to 2 decimals, truncates last 6 elements (trailing zeroes))\\n    // Particle.publish only accepts chars or strings\\n    temperatures += \\\"s, \\\";\\n    temperatures += String(temperature1);\\n    temperatures += \\\", l, \\\";\\n    temperatures += String(temperature2);\\n    temperatures += \\\", \\\";\\n}\\n\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"36d0df13-fd77-5b57-811e-9de2a4642680","slug":"car-temperature/car-temperature","__params":{"slug":"car-temperature"}}},
    "staticQueryHashes": ["2928772754"]}